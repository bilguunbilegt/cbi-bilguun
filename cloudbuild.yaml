steps:
# Step to pull a docker image for pgadmin, push it to container registry, and deploy to Cloud Run.
- name: "gcr.io/cloud-builders/docker"
  args: ['pull', 'dpage/pgadmin4']
- name: "gcr.io/cloud-builders/docker"
  args: ['tag', 'dpage/pgadmin4','gcr.io/bilguun3/pgadmin']
- name: "gcr.io/cloud-builders/docker"
  args: ['push', 'gcr.io/bilguun3/pgadmin']

- name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
  entrypoint: gcloud
  args: [
    'run', 'deploy', 'pg-admin', 
    '--image', 'gcr.io/bilguun3/pgadmin', 
    '--region', 'us-central1', 
    '--add-cloudsql-instances', 'bilguun3:us-central1:mypostgres', 
    '--platform', 'managed', 
    '--port', '80', 
    '--allow-unauthenticated', 
    '--set-env-vars', 'PGADMIN_DEFAULT_EMAIL=user@gmail.com', 
    '--set-env-vars', 'PGADMIN_DEFAULT_PASSWORD=SuperSecret'
  ]

# Step to build and deploy the Go microservice.
- name: "gcr.io/cloud-builders/docker"
  args: ['build', '-t', 'gcr.io/bilguun3/go-microservice','.']
- name: "gcr.io/cloud-builders/docker"
  args: ['push', 'gcr.io/bilguun3/go-microservice']

- name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
  entrypoint: gcloud
  args: [
    'run', 'deploy', 'go-microservice', 
    '--image', 'gcr.io/bilguun3/go-microservice', 
    '--region', 'us-central1', 
    '--add-cloudsql-instances', 'bilguun3:us-central1:mypostgres', 
    '--platform', 'managed', 
    '--port', '8080', 
    '--allow-unauthenticated'
  ]

# Step to build and deploy the Python service (forecasting and frontend).
- name: "gcr.io/cloud-builders/docker"
  args: ['build', '-t', 'gcr.io/bilguun3/python-service', '-f', 'Dockerfile-python', '.']
- name: "gcr.io/cloud-builders/docker"
  args: ['push', 'gcr.io/bilguun3/python-service']

- name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
  entrypoint: gcloud
  args: [
    'run', 'deploy', 'python-service', 
    '--image', 'gcr.io/bilguun3/python-service', 
    '--region', 'us-central1', 
    '--add-cloudsql-instances', 'bilguun3:us-central1:mypostgres', 
    '--platform', 'managed', 
    '--port', '8050', 
    '--allow-unauthenticated'
  ]

options:
  logging: CLOUD_LOGGING_ONLY

images:
- gcr.io/bilguun3/go-microservice
- gcr.io/bilguun3/pgadmin
- gcr.io/bilguun3/python-service
